import numpy as np

def min_production_time(stations, transfer_times, dependencies):
    n = len(stations[0])  # Number of stations
    dp = np.zeros((3, n))  # Dynamic programming array for minimum times

    # Initialize the first station times
    dp[:, 0] = stations[:, 0]

    # Calculate the minimum time for each station
    for i in range(1, n):
        for j in range(3):
            dp[j, i] = stations[j, i] + min(dp[k, i - 1] + transfer_times[k][j] for k in range(3))

    # Consider dependencies
    for i, j in dependencies:
        dp[j, i] += stations[j, i-1]

    return min(dp[:, -1])

# Input data
stations = np.array([[5, 9, 3], [6, 8, 4], [7, 6, 5]])
transfer_times = [[0, 2, 3], [2, 0, 4], [3, 4, 0]]
dependencies = [(0, 1), (1, 2)]

# Calculate and print the minimum production time
min_time = min_production_time(stations, transfer_times, dependencies)
print(f"Minimum Production Time: {min_time}")
