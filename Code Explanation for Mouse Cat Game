def cat_mouse_game(graph):
    n = len(graph)
    DRAW, MOUSE, CAT = 0, 1, 2
    color = [[[0] * 3 for _ in range(n)] for _ in range(n)]
    
    q = deque()
    for i in range(1, n):
        for t in range(1, 3):
            color[0][i][t] = MOUSE
            q.append((0, i, t, MOUSE))
            color[i][i][t] = CAT
            q.append((i, i, t, CAT))
    
    while q:
        x, y, t, c = q.popleft()
        for xt, yt, ct in ((x, y, 3 - t), (x, y, 0), (y, x, 3 - t)):
            if ct == DRAW:
                if color[xt][yt][ct] == 0:
                    color[xt][yt][ct] = t
                    q.append((xt, yt, ct, t))
            else:
                for it in graph[xt]:
                    if it == yt:
                        continue
                    if ct == t:
                        if color[it][yt][3 - ct] == 0:
                            color[it][yt][3 - ct] = 3 - t
                            q.append((it, yt, 3 - ct, 3 - t))
                    else:
                        if color[xt][it][t] == 0:
                            color[xt][it][t] = t
                            q.append((xt, it, t, t))
    
    return color[1][2][1]

# Example Usage
graph = [[2, 5], [3], [0, 4, 5], [1, 4, 5], [2, 3], [0, 2, 3]]
result = cat_mouse_game(graph)
print(result)  # Output: 0
