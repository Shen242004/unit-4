import sys

def floyds_algorithm(n, edges):
    INF = sys.maxsize
    distance = [[INF for _ in range(n)] for _ in range(n)]

    for i in range(n):
        distance[i][i] = 0

    for edge in edges:
        u, v, w = edge
        distance[u][v] = w

    for k in range(n):
        for i in range(n):
            for j in range(n):
                distance[i][j] = min(distance[i][j], distance[i][k] + distance[k][j])

    return distance

# Test Case
n = 4
edges = [[0, 1, 3], [1, 2, 1], [1, 3, 4], [2, 3, 1]]
distance_matrix = floyds_algorithm(n, edges)
print("Distance Matrix Before Floyd's Algorithm:")
for row in distance_matrix:
    print(row)

print("\nDistance Matrix After Floyd's Algorithm:")
for row in distance_matrix:
    print(row)
